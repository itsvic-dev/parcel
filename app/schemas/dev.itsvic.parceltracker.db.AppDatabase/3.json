{
  "formatVersion": 1,
  "database": {
    "version": 3,
    "identityHash": "c468cb8fb82c841f998cdd3e739d5c30",
    "entities": [
      {
        "tableName": "Parcel",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `humanName` TEXT NOT NULL, `parcelId` TEXT NOT NULL, `postalCode` TEXT, `service` TEXT NOT NULL, `isArchived` INTEGER NOT NULL DEFAULT 0)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "humanName",
            "columnName": "humanName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parcelId",
            "columnName": "parcelId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "postalCode",
            "columnName": "postalCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "service",
            "columnName": "service",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isArchived",
            "columnName": "isArchived",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ParcelStatus",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`parcelId` INTEGER NOT NULL, `status` TEXT NOT NULL, `lastChange` INTEGER NOT NULL, PRIMARY KEY(`parcelId`))",
        "fields": [
          {
            "fieldPath": "parcelId",
            "columnName": "parcelId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastChange",
            "columnName": "lastChange",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "parcelId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ParcelHistoryItem",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `parcelId` INTEGER NOT NULL, `description` TEXT NOT NULL, `time` TEXT NOT NULL, `location` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "parcelId",
            "columnName": "parcelId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "time",
            "columnName": "time",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "location",
            "columnName": "location",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'c468cb8fb82c841f998cdd3e739d5c30')"
    ]
  }
}